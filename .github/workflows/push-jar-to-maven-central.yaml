name: push-jar-to-maven-central
on:
  push:
    paths:
      # 只监听根路径 pom.xml 文件变化
      - pom.xml

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    # actions/setup-java配置的有问题 用env吧
    env:
      MAVEN_USERNAME: ${{ secrets.MAVEN_USERNAME }}
      MAVEN_PASSWORD: ${{ secrets.MAVEN_PASSWORD }}
      MAVEN_GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: 'main'
          submodules: 'recursive'
          # 我要所有的commit记录
          fetch-depth: 0

      - name: Get the version from pom.xml before and after commit
        id: version_check
        run: |
          # 获取提交前后的pom.xml版本信息，正则只匹配第一个<version>...</version>
          PREVIOUS_VERSION=$(git show HEAD~1:pom.xml | grep -oP '(?<=<version>)(.*?)(?=</version>)' | head -n 1)
          CURRENT_VERSION=$(cat pom.xml | grep -oP '(?<=<version>)(.*?)(?=</version>)' | head -n 1)
          
          # 如果版本变化了，标记为 true
          if [ "$PREVIOUS_VERSION" != "$CURRENT_VERSION" ]; then
            echo "Version changed: $PREVIOUS_VERSION -> $CURRENT_VERSION"
            echo "VERSION_CHANGED=true" >> $GITHUB_OUTPUT
            echo "CURRENT_VERSION=$CURRENT_VERSION" >> $GITHUB_OUTPUT
          else
            echo "Version not changed"
            echo "VERSION_CHANGED=false" >> $GITHUB_OUTPUT
          fi

      - name: Set up Graal JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'      # See 'Options' section below for all supported versions
          distribution: 'graalvm' # See 'Options' section below for all available distributions
          cache: 'maven'
          server-id: central
          server-username: MAVEN_USERNAME
          server-password: MAVEN_PASSWORD

      - name: Download gpg public key
        run: gpg --keyserver keyserver.ubuntu.com --recv-keys ${{ secrets.GPG_PUBLIC_KEY_ID }}

      - id: install-secret-key
        name: Install gpg secret key
        run: |
          # Install gpg secret key
          cat <(echo -e "${{ secrets.GPG_PRIVATE_KEY }}") | gpg --batch --import
          # Verify gpg secret key
          gpg --list-secret-keys --keyid-format LONG

      - name: Set up git
        run: |
          git config --global user.name "wangminan0811@hotmail.com"
          git config --global user.email "wangminan"

      - name: Build and deploy with Maven
#        if: ${{ steps.version_check.outputs.VERSION_CHANGED == 'true' }}
        run: mvn -B -Dmaven.test.skip=true release:prepare release:perform
